version: '3.8'

services:
  workflows-service:
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=workflows-service
    command: npm run start:dev -- workflows-service
    environment:
      - POSTGRES_HOST=workflows-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflows
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./apps/workflows-service:/usr/app/apps/workflows-service
    depends_on:
      - workflows-db
  workflows-db:
    restart: always
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=workflows
  virtual-facility:
    restart: always
    build:
      context: .
      dockerfile: ./Dockerfile
      args:
        - APP_NAME=virtual-facility
    command: npm run start:dev -- virtual-facility
    ports:
     - 3000:3000
    environment:
      - POSTGRES_HOST=virtual-facility-db
      - POSTGRES_PORT=5432
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=virtual-facility
      - CHOKIDAR_USEPOLLING=true
    volumes:
      - ./libs:/usr/src/app/libs
      - ./package.json:/usr/src/app/package.json
      - ./tsconfig.json:/usr/src/app/tsconfig.json
      - ./apps/virtual-facility:/usr/app/apps/virtual-facility
    depends_on:
      - virtual-facility-db
      - workflows-service
  virtual-facility-db:
    restart: always
    image: postgres:13.2-alpine
    environment:
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
      - POSTGRES_DB=virtual-facility
  adminer:
    image: adminer
    restart: always
    ports:
      - '8888:8080'
volumes:
  postgres_db: